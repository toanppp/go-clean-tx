// Code generated by MockGen. DO NOT EDIT.
// Source: ./wallet_use_case.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/toanppp/go-clean-tx/internal/domain"
)

// MockWalletUseCase is a mock of WalletUseCase interface.
type MockWalletUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockWalletUseCaseMockRecorder
}

// MockWalletUseCaseMockRecorder is the mock recorder for MockWalletUseCase.
type MockWalletUseCaseMockRecorder struct {
	mock *MockWalletUseCase
}

// NewMockWalletUseCase creates a new mock instance.
func NewMockWalletUseCase(ctrl *gomock.Controller) *MockWalletUseCase {
	mock := &MockWalletUseCase{ctrl: ctrl}
	mock.recorder = &MockWalletUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletUseCase) EXPECT() *MockWalletUseCaseMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockWalletUseCase) CreateWallet(ctx context.Context, balance int64) (domain.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", ctx, balance)
	ret0, _ := ret[0].(domain.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockWalletUseCaseMockRecorder) CreateWallet(ctx, balance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockWalletUseCase)(nil).CreateWallet), ctx, balance)
}

// GetBalanceByID mocks base method.
func (m *MockWalletUseCase) GetBalanceByID(ctx context.Context, id int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalanceByID", ctx, id)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalanceByID indicates an expected call of GetBalanceByID.
func (mr *MockWalletUseCaseMockRecorder) GetBalanceByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalanceByID", reflect.TypeOf((*MockWalletUseCase)(nil).GetBalanceByID), ctx, id)
}
